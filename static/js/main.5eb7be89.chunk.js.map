{"version":3,"sources":["serviceWorker.js","config/auth.js","components/LoginForm.js","components/RegisterForm.js","components/AdContainer.js","pages/Home.js","pages/Item.js","components/EditModal.js","components/AddModal.js","components/DeleteBtn.js","context/item-context.js","components/InventoryManagement.js","components/UserManagement.js","pages/Admin.js","components/ItemThumbnail.js","pages/Inventory.js","pages/Cart.js","components/Avatar.js","pages/Nav.js","context/login-status-context.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","isLoggedIn","localStorage","getItem","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","formContainer","border","borderRadius","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","msg","color","fontSize","linkContainer","marginBottom","LoginForm","props","useState","email","setEmail","password","setPassword","remember","setRemember","setMsg","handleLogin","setItem","removeItem","fetch","method","headers","body","JSON","stringify","then","response","token","status","get","to","json","classes","useEffect","localEmail","id","Container","component","maxWidth","className","CssBaseline","Typography","variant","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","type","FormControlLabel","control","Checkbox","checked","Button","onClick","Grid","container","item","xs","handleFormView","registerForm","RegisterForm","fname","setFname","lname","setLname","passwordMatch","setPasswordMatch","isAdmin","cart","fNameError","setFNameError","lNameError","setLNameError","emailError","setEmailError","passwordError","setPasswordError","passwordMatchError","setPasswordMatchError","emailRegex","RegExp","passwordRegex","handleFormValidation","e","sm","error","onBlur","helperText","console","log","alert","justify","logos","gridTemplateColumns","logo","height","image","AdContainer","src","alt","welcomeContainer","con","left","padding","fontWeight","lineHeight","right","justifyContent","Home","formView","setFormView","Link","itemContainer","itemContent","img","desc","selectSize","minWidth","fontFamily","quantity","price","Item","existingCart","parse","FormControl","InputLabel","Select","labelId","MenuItem","endIcon","push","EditModal","open","setOpen","inventory","setName","setPrice","setQuantity","setDesc","setImg","toggleModal","position","background","boxShadow","shadows","top","button","input","Modal","onClose","aria-labelledby","aria-describedby","multiline","rows","_id","AddModal","startIcon","DeleteBtn","confirm","ItemContext","createContext","InventoryManagement","useContext","toggleDirection","setDirection","direction","sortList","setSortList","sortQuantity","sorted","orderBy","table","descCell","itemCell","quantityCell","tableHeader","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","toLowerCase","sortNames","TableBody","map","key","scope","UserManagement","users","setUsers","a","getUsers","user","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","root","flexGrow","Admin","React","setValue","AppBar","Tabs","event","newValue","Tab","transition","itemName","itemPrice","ItemThumbNail","href","imgContainer","itemsContainer","gridGap","Inventory","handleSelected","ItemThumbnail","btn","paddingBottom","header","cartH2","marginLeft","Cart","setCart","ccyFormat","num","toFixed","qty","unit","priceRow","invoiceSubtotal","reduce","sum","i","invoiceTaxes","invoiceTotal","row","rowSpan","colSpan","Avatar","redirComp","setRedirComp","anchorEl","setAnchorEl","handleClose","handleLogout","redirect","loginStatus","aria-controls","aria-haspopup","currentTarget","keepMounted","menuButton","marginRight","title","Nav","Toolbar","IconButton","edge","LoginStatus","App","setLoginStatus","setInventory","AdminRoute","Component","rest","admin","render","PrivateRoute","LoggedInRoute","data","Provider","exact","path","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"iNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCjBOC,EAAa,WAEtB,OADcC,aAAaC,QAAQ,S,2HCoJjCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,cAAe,CACXC,OAAQ,kBACRC,aAAc,GAElBC,OAAQ,CACNC,OAAQX,EAAMG,QAAQ,GACtBS,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPf,UAAWF,EAAMG,QAAQ,IAE3Be,OAAQ,CACNP,OAAQX,EAAMG,QAAQ,EAAG,EAAG,IAE9BgB,IAAK,CACDC,MAAO,MACPC,SAAU,QAEdC,cAAe,CACXC,aAAc,QAIPC,EAlKG,SAACC,GAAW,IAAD,EAECC,mBAAS,IAFV,mBAElBC,EAFkB,KAEXC,EAFW,OAGOF,mBAAS,IAHhB,mBAGlBG,EAHkB,KAGRC,EAHQ,OAIOJ,oBAAS,GAJhB,mBAIlBK,EAJkB,KAIRC,EAJQ,OAKHN,mBAAS,IALN,mBAKlBP,EALkB,KAKbc,EALa,KAanBC,EAAc,WAEhBD,EAAO,IACJF,EACCnC,aAAauC,QAAQ,QAASR,GAE9B/B,aAAawC,WAAW,SAG5BC,MAAM,uDAAwD,CAC1DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEf,QAAOE,eAC/Bc,MAAK,SAAAC,GDlCQ,IAACC,ECyCb,OANuB,MAApBD,EAASE,QDnCCD,ECoCAD,EAASL,QAAQQ,IAAI,kBDnC1CnD,aAAauC,QAAQ,OAAQU,GCoCjBZ,EAAO,kBAAC,IAAD,CAAUe,GAAG,iBAEpBf,EAAO,gBAEJW,EAASK,UACjBN,MAAK,SAAAC,GAAQ,OAAIhD,aAAauC,QAAQ,OAAQM,KAAKC,UAAUE,QAI9DM,EAAUpD,IAUhB,OARAqD,qBAAU,WACN,IAAMC,EAAaxD,aAAaC,QAAQ,SACrCuD,IACCxB,EAASwB,GACTpB,GAAY,MAEjB,IAIC,yBAAKqB,GAAG,mBACJ,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,UAAWP,EAAQ3C,eAC7D,kBAACmD,EAAA,EAAD,MACA,yBAAKD,UAAWP,EAAQjD,OACpB,kBAAC,IAAD,CAAQwD,UAAWP,EAAQxC,QACvB,kBAAC,IAAD,OAEJ,kBAACiD,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,MAAnC,WAGA,0BAAMH,UAAWP,EAAQ/B,KAAMA,GAC/B,0BAAMsC,UAAWP,EAAQlC,KAAM6C,YAAU,GACrC,kBAACC,EAAA,EAAD,CACIF,QAAQ,WACRjD,OAAO,SACPoD,UAAQ,EACRC,WAAS,EACTX,GAAG,QACHY,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAO1C,EACP2C,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB3C,EAAS2C,EAAOF,UAE9C,kBAACP,EAAA,EAAD,CACIF,QAAQ,WACRjD,OAAO,SACPoD,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNO,KAAK,WACLnB,GAAG,WACHc,aAAa,mBACbE,MAAOxC,EACPyC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzC,EAAYyC,EAAOF,UAEjD,kBAACI,EAAA,EAAD,CACIC,QAAS,kBAACC,EAAA,EAAD,CACGT,KAAK,WACLU,QAAS7C,EACTX,MAAM,UACNkD,SAtFjB,WACXtC,GAAaD,MAsFGkC,MAAM,gBAGV,kBAACY,EAAA,EAAD,CACIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,UACNqC,UAAWP,EAAQhC,OACnB4D,QAAS,kBAAM5C,MALnB,WASA,kBAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACvB,UAAWP,EAAQ5B,eAC/B,kBAACyD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACb,kBAAC,IAAD,CAAMlC,GAAG,GAAGY,QAAQ,SAApB,qBAIA,kBAACmB,EAAA,EAAD,CAAME,MAAI,GACV,kBAAC,IAAD,CACIjC,GAAG,GACH8B,QAASrD,EAAM0D,eACfvB,QAAQ,SACP,yCCsEvB9D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEd8E,aAAc,CACV5E,OAAQ,kBACRC,aAAc,EACdP,UAAW,IAEfQ,OAAQ,CACNC,OAAQX,EAAMG,QAAQ,GACtBS,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPf,UAAWF,EAAMG,QAAQ,IAE3Be,OAAQ,CACNP,OAAQX,EAAMG,QAAQ,EAAG,EAAG,IAE9BmB,cAAe,CACXC,aAAc,QAIT8D,EA9NM,SAAC5D,GAAW,IAAD,EAEFC,mBAAS,IAFP,mBAErB4D,EAFqB,KAEdC,EAFc,OAGF7D,mBAAS,IAHP,mBAGrB8D,EAHqB,KAGdC,EAHc,OAIF/D,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKIF,mBAAS,IALb,mBAKrBG,EALqB,KAKXC,EALW,OAMcJ,mBAAS,IANvB,mBAMrBgE,EANqB,KAMNC,EANM,OAOXjE,oBAAS,GAAnBkE,EAPqB,sBAQdlE,mBAAS,IAAhBmE,EARqB,sBAUQnE,oBAAS,GAVjB,mBAUrBoE,EAVqB,KAUTC,EAVS,OAWQrE,oBAAS,GAXjB,mBAWrBsE,EAXqB,KAWTC,EAXS,OAYQvE,oBAAS,GAZjB,mBAYrBwE,EAZqB,KAYTC,EAZS,OAaczE,oBAAS,GAbvB,mBAarB0E,EAbqB,KAaNC,EAbM,QAcwB3E,oBAAS,GAdjC,qBAcrB4E,GAdqB,MAcDC,GAdC,MAgBtBC,GAAaC,OACf,6EAIEC,GAAgBD,OAClB,oDAGEE,GAAuB,SAACC,GAAO,IAC1B1C,EAAe0C,EAAf1C,KAAMG,EAASuC,EAATvC,MACb,OAAOH,GACH,IAAK,YACc6B,EAAL,KAAVT,GACA,MACJ,IAAK,WACcW,EAAL,KAAVT,GACA,MACJ,IAAK,QACD7D,EAAMjC,MAAM8G,IAAcL,GAAc,GAASA,GAAc,GAC/D,MACJ,IAAK,WACD9B,EAAM3E,MAAMgH,IAAiBL,GAAiB,GAASA,GAAiB,GACxE,MACJ,IAAK,gBACDhC,EAAM3E,MAAMmC,GAAY0E,IAAsB,GAASA,IAAsB,KAiCnFrD,GAAUpD,IAEhB,OACI,yBAAKuD,GAAG,sBACf,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,UAAWP,GAAQkC,cAClD,kBAAC1B,EAAA,EAAD,MACA,yBAAKD,UAAWP,GAAQjD,OACpB,kBAAC,IAAD,CAAQwD,UAAWP,GAAQxC,QAC3B,kBAAC,IAAD,OAEA,kBAACiD,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,MAAnC,WAGA,0BAAMP,GAAG,eAAeI,UAAWP,GAAQlC,KAAM6C,YAAU,GAC3D,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,GACrB,kBAAC4E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI2B,GAAI,GACvB,kBAAC/C,EAAA,EAAD,CAEII,KAAK,YACL4C,MAAOhB,EACPlC,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,YACHY,MAAM,aACNG,WAAS,EACTC,MAAOiB,EACPhB,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcgB,EAAShB,EAAOF,QACxC0C,OAAQ,gBAAExC,EAAF,EAAEA,OAAF,OAAcoC,GAAqBpC,OAG/C,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI2B,GAAI,GACvB,kBAAC/C,EAAA,EAAD,CACIF,QAAQ,WACRkD,MAAOd,EACPjC,UAAQ,EACRC,WAAS,EACTX,GAAG,WACHY,MAAM,YACNC,KAAK,WAELG,MAAOmB,EACPlB,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAckB,EAASlB,EAAOF,QACxC0C,OAAQ,gBAAExC,EAAF,EAAEA,OAAF,OAAcoC,GAAqBpC,OAG/C,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACpB,EAAA,EAAD,CACIF,QAAQ,WACRG,UAAQ,EACR+C,MAAOZ,EACPlC,WAAS,EACTX,GAAG,QACHY,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbE,MAAO1C,EACP2C,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc3C,EAAS2C,EAAOF,QACxC0C,OAAQ,gBAAExC,EAAF,EAAEA,OAAF,OAAcoC,GAAqBpC,OAG/C,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACpB,EAAA,EAAD,CACIF,QAAQ,WACRkD,MAAOV,EACP5B,KAAK,WACLT,UAAQ,EACRC,WAAS,EACTX,GAAG,WACHY,MAAM,kBACNC,KAAK,WACLG,MAAOxC,EACPyC,SAAU,YAAe,IAAbC,EAAY,EAAZA,OAAazC,EAAYyC,EAAOF,OAAQsC,GAAqBpC,IACzEyC,WAAW,kFAIf,kBAACjC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACpB,EAAA,EAAD,CACIU,KAAK,WACLsC,MAAOR,GACP1C,QAAQ,WACRG,UAAU,EACVC,WAAS,EACTX,GAAG,gBACHY,MAAM,mBACNC,KAAK,gBACLI,SAAU,YAAe,IAAbC,EAAY,EAAZA,OAAaoB,EAAiBpB,EAAOF,OAAQsC,GAAqBpC,IAC9EyC,WAAW,wBACX3C,MAAOqB,MAKf,kBAACb,EAAA,EAAD,CAEIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,UACNqC,UAAWP,GAAQhC,OACnB4D,QAAS,kBA5HH,IAAfgB,GAAkC,KAAVR,IACL,IAAfU,GAAkC,KAAVR,IACT,IAAfU,GAAkC,KAAVvE,IACN,IAAlByE,GAAwC,KAAbvE,IACJ,IAAvByE,GACCW,QAAQC,IAAI,cAEZC,MAAM,8CAId9E,MAAM,0DAA2D,CAC7DC,OAAQ,OACRC,QAAS,CACL,eAAiB,oBAErBC,KAAMC,KAAKC,UAAU,CAAC4C,QAAOE,QAAO7D,QAAOE,WAAU+D,UAASC,WAEjElD,MAAK,WAAO4C,EAAS,IAAKE,EAAS,IAAK7D,EAAS,IAAKE,EAAY,IAAK6D,EAAiB,OACvFhD,KAAKlB,EAAM0D,kBAmGL,WAUA,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACoC,QAAQ,WAAW3D,UAAWP,GAAQ5B,eAClD,kBAACyD,EAAA,EAAD,CAAME,MAAI,GACV,kBAAC,IAAD,CAAMjC,GAAG,GACT8B,QAASrD,EAAM0D,eACfvB,QAAQ,SAFR,2CCtJd9D,EAAYC,aAAW,iBAAO,CAChCsH,MAAO,CACHjH,QAAS,OACTkH,oBAAqB,iBACrBrG,MAAO,QAEXsG,KAAM,CACFtG,MAAO,MACPuG,OAAQ,SAEZC,MAAO,CACHxG,MAAO,WAIAyG,EAvDK,WAEhB,IAAMxE,EAAUpD,IAChB,OACI,yBAAKuD,GAAG,eAAeI,UAAWP,EAAQ8B,WACtC,iFAEA,yBAAKvB,UAAWP,EAAQmE,OACpB,yBAAK5D,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,UAExH,yBAAKnE,UAAWP,EAAQqE,MACpB,yBAAKI,IAAI,6EAA6ElE,UAAWP,EAAQuE,MAAOG,IAAI,a,SCalI9H,EAAYC,aAAW,iBAAO,CAChC8H,iBAAkB,CACdzH,QAAS,QAEb0H,IAAK,CACD1H,QAAS,OACTC,cAAe,SACfY,MAAO,MACPX,WAAY,UAEhByH,KAAM,CACFP,OAAQ,OACRpH,QAAS,OACTC,cAAe,SACfC,WAAY,SAEZ0H,QAAS,YACT5G,MAAO,UACPC,SAAU,OACV4G,WAAY,MACZC,WAAY,OAEhBC,MAAO,CACH/H,QAAS,OACTC,cAAe,SACf+H,eAAgB,cAMTC,EAxEF,WAAO,IAAD,EACiB3G,mBAAS,SAD1B,mBACR4G,EADQ,KACEC,EADF,KAGTpD,EAAiB,WACIoD,EAAV,UAAbD,EAAmC,WAA0B,UAG3DtH,EACW,UAAbsH,EACI,kBAAC,EAAD,CACAnD,eAAgBA,IAEd,kBAAC,EAAD,CACFA,eAAgBA,IAIlBjC,EAAUpD,IAChB,OACI,yBAAKuD,GAAG,kBAEJ,yBAAKI,UAAWP,EAAQ2E,kBACpB,yBAAKpE,UAAS,UAAKP,EAAQ6E,KAAb,YAAqB7E,EAAQ4E,MACvC,uCACA,iMAEO,kBAACU,EAAA,EAAD,CACH1D,QAASK,GADN,UAGP,kBAAC,EAAD,OAGJ,yBAAK1B,UAAS,UAAKP,EAAQiF,MAAb,YAAsBjF,EAAQ4E,MACvC9G,M,sDCqBflB,EAAYC,aAAW,iBAAO,CAChC0I,cAAe,CACXxH,MAAO,OACPb,QAAS,OACTkH,oBAAqB,iBACrBE,OAAQ,QAEZkB,YAAa,CACTtI,QAAS,OACTC,cAAe,SACfY,MAAO,MACPX,WAAY,UAEhBqI,IAAK,CACD1H,MAAO,IACP+G,QAAS,IAEbY,KAAM,CACFV,WAAY,IACZ7G,SAAU,GACV4G,WAAY,IACZD,QAAS,EACT/G,MAAO,KAEX4H,WAAY,CACRC,SAAU,KAEd5E,KAAM,CACF6E,WAAY,uBACZd,WAAY,IACZ5G,SAAU,GACV2G,QAAS,EACT9H,UAAW,IAEf8I,SAAU,CACN3H,SAAU,IAEd4H,MAAO,CACH5H,SAAU,QAIH6H,EA9FF,WAET,IAAIC,EAAevJ,aAAaC,QAAQ,QAFzB,EAGA6B,mBAASe,KAAK2G,MAAMxJ,aAAaC,QAAQ,cAAjDoF,EAHQ,sBAIAvD,mBAASe,KAAK2G,MAAMD,IAA5BtD,EAJQ,oBAYT3C,EAAUpD,IAChB,OACI,yBAAK2D,UAAWP,EAAQuF,eACpB,yBAAKhF,UAAWP,EAAQwF,aACpB,yBAAKjF,UAAU,kBACX,yBACIkE,IAAK1C,EAAK0D,IACVlF,UAAWP,EAAQyF,IACnBf,IAAI,6BAGZ,uBAAGnE,UAAWP,EAAQ0F,MAAO3D,EAAK2D,OAEtC,yBAAKnF,UAAWP,EAAQwF,aACpB,uBAAGjF,UAAWP,EAAQgB,MAAOe,EAAKf,MAClC,uBAAGT,UAAWP,EAAQ+F,OAAtB,WAAsChE,EAAKgE,OAC3C,kBAACI,EAAA,EAAD,CAAazF,QAAQ,YACrB,kBAAC0F,EAAA,EAAD,CAAYjG,GAAG,QAAf,QACA,kBAACkG,EAAA,EAAD,CACIC,QAAQ,oCACR/F,UAAWP,EAAQ2F,WACnB5E,MAAM,QAEN,kBAACwF,EAAA,EAAD,CAAUpF,MAAO,KAAjB,SACA,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,KAAjB,UACA,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,KAAjB,WAGJ,uBAAGZ,UAAWP,EAAQ8F,UAAtB,aAA2C/D,EAAK+D,UAChD,kBAACnE,EAAA,EAAD,CACIjB,QAAQ,YACRxC,MAAM,UACNsI,QAAS,kBAAC,IAAD,MACT5E,QAAS,kBAtCrBe,EAAK8D,KAAK1E,QACVrF,aAAauC,QAAQ,OAAQM,KAAKC,UAAUmD,MAiCpC,kB,2BCgHD+D,EA1JG,SAACnI,GAAW,IAAD,EACDC,oBAAS,GADR,mBAClBmI,EADkB,KACZC,EADY,OAGDpI,mBAASD,EAAMsI,UAAU7F,MAHxB,mBAGlBA,EAHkB,KAGZ8F,EAHY,OAICtI,mBAASD,EAAMsI,UAAUd,OAJ1B,mBAIlBA,EAJkB,KAIXgB,EAJW,OAKOvI,mBAASD,EAAMsI,UAAUf,UALhC,mBAKlBA,EALkB,KAKRkB,EALQ,OAMDxI,mBAASD,EAAMsI,UAAUnB,MANxB,mBAMlBA,EANkB,KAMZuB,EANY,OAOHzI,mBAASD,EAAMsI,UAAUpB,KAPtB,mBAOlBA,EAPkB,KAObyB,EAPa,KAsBnBC,EAAc,WAEZP,GADDD,IA0BD3G,EAnBYnD,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLqK,SAAU,WACVrJ,MAAO,IACPL,gBAAiBZ,EAAMa,QAAQ0J,WAAWtK,MAC1CO,OAAQ,iBACRgK,UAAWxK,EAAMyK,QAAQ,GACzBzC,QAAShI,EAAMG,QAAQ,EAAG,EAAG,GAC7BuK,IAAK,IACL3C,KAAM,OAER4C,OAAQ,CACJhK,OAAQX,EAAMG,QAAQ,EAAG,EAAG,IAEhCyK,MAAO,CACHjK,OAAQX,EAAMG,QAAQ,EAAE,EAAE,OAIlBL,GAUhB,OACI,yBAAKuD,GAAG,wBACJ,kBAAC,IAAD,CAAUyB,QAASuF,IACnB,kBAACQ,EAAA,EAAD,CACIhB,KAAMA,EACNiB,QAAST,EACTU,kBAAgB,qBAChBC,mBAAiB,4BAGjB,yBAAKvH,UAAWP,EAAQjD,OACpB,wBAAIoD,GAAG,sBAAP,aACA,kBAACS,EAAA,EAAD,CACII,KAAK,OACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,OACHY,MAAM,YACNR,UAAWP,EAAQ0H,MACnBvG,MAAOH,EACPI,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcyF,EAAQzF,EAAOF,UAE3C,kBAACP,EAAA,EAAD,CACII,KAAK,WACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,WACHY,MAAM,WACNR,UAAWP,EAAQ0H,MACnBvG,MAAO2E,EACP1E,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc2F,EAAY3F,EAAOF,UAE/C,kBAACP,EAAA,EAAD,CACII,KAAK,QACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,QACHY,MAAM,QACNR,UAAWP,EAAQ0H,MACnBvG,MAAO4E,EACP3E,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc0F,EAAS1F,EAAOF,UAE5C,kBAACP,EAAA,EAAD,CACII,KAAK,MACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,UACHY,MAAM,UACNI,MAAOsE,EACPlF,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc6F,EAAO7F,EAAOF,UAE1C,kBAACP,EAAA,EAAD,CACII,KAAK,OACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,OACHY,MAAM,cACNR,UAAWP,EAAQ0H,MACnBK,WAAa,EACbC,KAAK,IACL7G,MAAOuE,EACPtE,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc4F,EAAQ5F,EAAOF,UAE3C,kBAACQ,EAAA,EAAD,CACIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,UACNqC,UAAWP,EAAQyH,OACnB7F,QAAS,WA1HzBzC,MAAM,mDAAD,OAAoDZ,EAAMsI,UAAUoB,KAAO,CAC5E7I,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACwB,OAAM+E,QAAMD,WAAUJ,OAAMD,UAErDhG,KAAKsE,QAAQC,IAAI,WACjBvE,MAAK,kBAAM0H,SA6GA,UASA,kBAACxF,EAAA,EAAD,CACIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,YACNqC,UAAWP,EAAQyH,OACnB7F,QAAS,kBAAMuF,MALnB,c,kBCeLe,EAxJE,SAAC3J,GAAW,IAAD,EACAC,oBAAS,GADT,mBACjBmI,EADiB,KACXC,EADW,OAGApI,mBAAS,IAHT,mBAGjBwC,EAHiB,KAGX8F,EAHW,OAIEtI,mBAAS,IAJX,mBAIjBuH,EAJiB,KAIVgB,EAJU,OAKQvI,mBAAS,IALjB,mBAKjBsH,EALiB,KAKPkB,EALO,OAMAxI,mBAAS,IANT,mBAMjBkH,EANiB,KAMXuB,EANW,OAOFzI,mBAAS,IAPP,mBAOjBiH,EAPiB,KAOZyB,EAPY,KAwBlBC,EAAc,WAEZP,GADDD,IA0BD3G,EAnBYnD,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLqK,SAAU,WACVrJ,MAAO,IACPL,gBAAiBZ,EAAMa,QAAQ0J,WAAWtK,MAC1CO,OAAQ,iBACRgK,UAAWxK,EAAMyK,QAAQ,GACzBzC,QAAShI,EAAMG,QAAQ,EAAG,EAAG,GAC7BuK,IAAK,IACL3C,KAAM,OAER4C,OAAQ,CACJhK,OAAQX,EAAMG,QAAQ,EAAG,EAAG,IAEhCyK,MAAO,CACHjK,OAAQX,EAAMG,QAAQ,EAAE,EAAE,OAIlBL,GAKhB,OACI,yBAAKuD,GAAG,wBACJ,kBAACwB,EAAA,EAAD,CACIjB,QAAQ,YACRxC,MAAM,UACNqC,UAAWP,EAAQyH,OACnBU,UAAW,kBAAC,IAAD,MACXvG,QAASuF,GALb,YASA,kBAACQ,EAAA,EAAD,CACIhB,KAAMA,EACNiB,QAAST,EACTU,kBAAgB,qBAChBC,mBAAiB,4BAGjB,yBAAKvH,UAAWP,EAAQjD,OACpB,wBAAIoD,GAAG,sBAAP,YACA,kBAACS,EAAA,EAAD,CACII,KAAK,OACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,OACHY,MAAM,YACNR,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcyF,EAAQzF,EAAOF,UAE3C,kBAACP,EAAA,EAAD,CACII,KAAK,WACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,WACHY,MAAM,WACNR,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc2F,EAAY3F,EAAOF,UAE/C,kBAACP,EAAA,EAAD,CACII,KAAK,QACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,QACHY,MAAM,QACNR,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc0F,EAAS1F,EAAOF,UAE5C,kBAACP,EAAA,EAAD,CACII,KAAK,MACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,UACHY,MAAM,UACNR,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc6F,EAAO7F,EAAOF,UAE1C,kBAACP,EAAA,EAAD,CACII,KAAK,OACLN,QAAQ,WACRG,UAAQ,EACRC,WAAS,EACTX,GAAG,OACHY,MAAM,cACNR,UAAWP,EAAQ0H,MACnBtG,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAc4F,EAAQ5F,EAAOF,UAE3C,kBAACQ,EAAA,EAAD,CACIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,UACNqC,UAAWP,EAAQyH,OACnB7F,QAAS,WAxHzBzC,MAAM,kDAAmD,CACrDC,OAAQ,OACRC,QAAS,CACL,eAAiB,oBAErBC,KAAMC,KAAKC,UAAU,CAACwB,OAAM+E,QAAOD,WAAUJ,OAAMD,UACpDhG,MAAK,WAAOqH,EAAQ,IAAKC,EAAS,IAAKC,EAAY,IAAKC,EAAQ,IAAKC,EAAO,OAC9EzH,MAAK,kBAAM0H,OACX1H,KAAKsE,QAAQC,IAAI,YA2GN,OASA,kBAACrC,EAAA,EAAD,CACIb,WAAS,EACTJ,QAAQ,YACRxC,MAAM,YACNqC,UAAWP,EAAQyH,OACnB7F,QAAS,kBAAMuF,MALnB,c,kBC3HLiB,EAnBG,SAAC7J,GAYf,OACI,yBAAK4B,GAAG,wBACJ,kBAAC,IAAD,CAAYyB,QAAU,WAXvBvF,OAAOgM,QAAQ,+CACdlJ,MAAM,mDAAD,OAAoDZ,EAAMsI,UAAUoB,KAAO,CAC5E7I,OAAQ,WAEXK,KAAKsE,QAAQC,IAAI,gB,mECRjBsE,GAAcC,wBAAc,I,oBC4I1BC,GA5Ha,SAACjK,GAEzB,IAAMsI,EAAY4B,qBAAWH,IAEvBI,EAAkB,WAEhBC,EADa,QAAdC,EACc,OAEA,QARc,EAYHpK,mBAASqI,GAZN,mBAY5BgC,EAZ4B,KAYlBC,EAZkB,OAaDtK,mBAAS,OAbR,mBAa5BoK,EAb4B,KAajBD,EAbiB,KAuB7BI,EAAc,WAChB,IAAMC,EAASC,KAAQpC,EAAW,WAAY+B,GAC9CF,IACAI,EAAYE,IAsBVhJ,EAlBYnD,YAAW,CACzBqM,MAAO,CACLtD,SAAU,KAEZuD,SAAU,CACN7I,SAAU,KAEd8I,SAAU,CACNxD,SAAU,KAEdyD,aAAc,CACVtL,MAAO,IAEXuL,YAAa,CACTvE,WAAY,SAIJnI,GAEhB,OACI,yBAAKuD,GAAG,uBACJ,kBAACoJ,GAAA,EAAD,CAAgBlJ,UAAWmJ,MACvB,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOlJ,UAAWP,EAAQkJ,MAAOQ,aAAW,gBACxC,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI/E,QAAQ,WACRgF,MAAM,OACNvJ,UAAWP,EAAQsJ,YACnB1H,QAAS,kBA5ChB,WACb,IAAMoH,EAASC,KAAQpC,EAAW,CAAC,SAAA9E,GAAI,OAAIA,EAAKf,KAAK+I,gBAAgBnB,GACrEF,IACAI,EAAYE,GAyCuBgB,KAEX,kBAACvI,EAAA,EAAD,MANR,QASA,kBAACoI,EAAA,EAAD,CACIC,MAAM,QACNvJ,UAAWP,EAAQsJ,YACnB1H,QAAS,kBAAMmH,MAHnB,YAMA,kBAACc,EAAA,EAAD,CACIC,MAAM,QACNvJ,UAAWP,EAAQsJ,YACnB1H,QAAS,kBAAMmH,MAHnB,SAMA,kBAACc,EAAA,EAAD,CACIC,MAAM,OACNvJ,UAAWP,EAAQsJ,aAFvB,eAKA,kBAACO,EAAA,EAAD,CACIC,MAAM,OACNvJ,UAAWP,EAAQsJ,aAFvB,QAIA,kBAACO,EAAA,EAAD,CACIC,MAAM,OACNvJ,UAAWP,EAAQsJ,aAFvB,YAMJ,kBAACW,EAAA,EAAD,KAECpB,EAASqB,KAAI,SAACnI,GAAD,OACV,kBAAC6H,GAAA,EAAD,CAAUO,IAAKpI,EAAKkG,KACpB,kBAAC4B,EAAA,EAAD,CAAWxJ,UAAU,KAAK+J,MAAM,MAAMtF,QAAQ,WAAWvE,UAAWP,EAAQoJ,UACxE,kBAAC3H,EAAA,EAAD,MACCM,EAAKf,MAEV,kBAAC6I,EAAA,EAAD,CAAWC,MAAM,QAAQvJ,UAAWP,EAAQqJ,cAAetH,EAAK+D,UAChE,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAAS/H,EAAKgE,OAC/B,kBAAC8D,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQmJ,UAAWpH,EAAK2D,MAC3D,kBAACmE,EAAA,EAAD,CAAWC,MAAM,QACb,kBAAC,EAAD,CACIjD,UAAW9E,KAGnB,kBAAC8H,EAAA,EAAD,CAAWC,MAAM,QACb,kBAAC,EAAD,CACIjD,UAAW9E,c,6BCrC5BsI,GA/EQ,WAAO,IAAD,EAEH7L,mBAAS,IAFN,mBAEtB8L,EAFsB,KAEfC,EAFe,mDAI7B,uBAAAC,EAAA,sEAC2BrL,MAAM,kDADjC,cAEaY,OACJN,MAAK,SAAAC,GAAQ,OAAI6K,EAAS7K,MAHnC,4CAJ6B,sBAW3BO,qBAAU,YAXiB,mCAYzBwK,KACD,IAGC,IAkBMzK,EAlBYnD,YAAW,CACzBqM,MAAO,CACLtD,SAAU,KAEZuD,SAAU,CACN7I,SAAU,KAEd8I,SAAU,CACNxD,SAAU,IAEdyD,aAAc,CACVtL,MAAO,IAEXuL,YAAa,CACTvE,WAAY,SAIJnI,GAEhB,OACI,yBAAKuD,GAAG,uBACJ,kBAACoJ,GAAA,EAAD,CAAgBlJ,UAAWmJ,MACvB,kBAACC,EAAA,EAAD,CAAOlJ,UAAWP,EAAQkJ,MAAOQ,aAAW,gBACxC,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW/E,QAAQ,WAAWgF,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAC1D,kBAAC7H,EAAA,EAAD,OAGJ,kBAACoI,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAA3C,cACA,kBAACO,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAA3C,aACA,kBAACO,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAA3C,SACA,kBAACO,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAA3C,WACA,kBAACO,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQsJ,aAA3C,UAGJ,kBAACW,EAAA,EAAD,KACCK,EAAMJ,KAAI,SAACQ,GAAD,OACP,kBAACd,GAAA,EAAD,CAAUO,IAAKO,EAAKzC,KACpB,kBAAC4B,EAAA,EAAD,CAAWxJ,UAAU,KAAK+J,MAAM,MAAMtF,QAAQ,WAAWvE,UAAWP,EAAQoJ,UACxE,kBAAC3H,EAAA,EAAD,OAEJ,kBAACoI,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQoJ,UAAWsB,EAAKtI,OAC3D,kBAACyH,EAAA,EAAD,CAAWC,MAAM,QAAQY,EAAKpI,OAC9B,kBAACuH,EAAA,EAAD,CAAWC,MAAM,QAAQY,EAAKjM,OAC9B,kBAACoL,EAAA,EAAD,CAAWC,MAAM,OAAOvJ,UAAWP,EAAQmJ,UACtCuB,EAAKhI,QACF,MACC,MAET,kBAACmH,EAAA,EAAD,CAAWC,MAAM,kB,wCCnEzC,SAASa,GAASpM,GAAQ,IAChBqM,EAAqCrM,EAArCqM,SAAUzJ,EAA2B5C,EAA3B4C,MAAO0J,EAAoBtM,EAApBsM,MAAUC,EADZ,YACsBvM,EADtB,8BAGvB,OACE,uCACEwM,KAAK,WACLC,OAAQ7J,IAAU0J,EAClB1K,GAAE,0BAAqB0K,GACvBhD,kBAAA,qBAA+BgD,IAC3BC,GAEH3J,IAAU0J,GACT,kBAACI,GAAA,EAAD,CAAKC,EAAG,GACN,kBAACzK,EAAA,EAAD,CAAYJ,UAAW,QAAUuK,KAa3C,SAASO,GAAUN,GACjB,MAAO,CACL1K,GAAG,cAAD,OAAgB0K,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMjO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsO,KAAM,CACJC,SAAU,EACV3N,gBAAiBZ,EAAMa,QAAQ0J,WAAWtK,WAI/B,SAASuO,KACtB,IAAMtL,EAAUpD,KADc,EAEJ2O,IAAM/M,SAAS,GAFX,mBAEvB2C,EAFuB,KAEhBqK,EAFgB,KAS9B,OACE,yBAAKjL,UAAWP,EAAQoL,MACtB,kBAACK,GAAA,EAAD,CAAQrE,SAAS,UACf,kBAACsE,GAAA,EAAD,CAAMvK,MAAOA,EAAOC,SARL,SAACuK,EAAOC,GAC3BJ,EAASI,IAOuClC,aAAW,uBACrD,kBAACmC,GAAA,EAAD,eAAK9K,MAAM,aAAgBoK,GAAU,KACrC,kBAACU,GAAA,EAAD,eAAK9K,MAAM,SAAYoK,GAAU,OAIrC,kBAACR,GAAD,CAAUxJ,MAAOA,EAAO0J,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAACF,GAAD,CAAUxJ,MAAOA,EAAO0J,MAAO,GAC7B,kBAAC,GAAD,QCrER,IAgBMjO,GAAYC,aAAW,iBAAO,CAChCiF,UAAW,CACP/D,MAAO,MACPuG,OAAQ,OACRhH,OAAQ,kBACRC,aAAc,EACdL,QAAS,OACTC,cAAe,SACf+H,eAAgB,SAChB9H,WAAY,SACZ0O,WAAY,sBACZ5N,MAAO,mBAEX6N,SAAU,CACNjH,QAAS,EACTrH,OAAQ,EACRU,SAAU,GACVmC,SAAU,KAEd0L,UAAW,GAGXvG,IAAK,CACD1H,MAAO,IACPN,OAAQ,QAIDwO,GA5CO,SAAC1N,GAEnB,IAAMyB,EAAUpD,KAEhB,OACI,kBAAC0I,EAAA,EAAD,CAAM4G,KAAK,QAAQnK,KAAMxD,EAAMwD,MAC3B,yBAAKxB,UAAWP,EAAQ8B,WACpB,yBAAKvB,UAAWP,EAAQmM,cACpB,yBAAK5L,UAAWP,EAAQyF,IAAKhB,IAAKlG,EAAMwD,KAAK0D,IAAKf,IAAKnG,EAAMwD,KAAKf,QAEtE,wBAAIT,UAAWP,EAAQ+L,UAAWxN,EAAMwD,KAAKf,MAC7C,uBAAGT,UAAWP,EAAQgM,WAAtB,WAA0CzN,EAAMwD,KAAKgE,UCiB/DnJ,GAAYC,aAAW,iBAAO,CAChCuP,eAAgB,CACZrO,MAAO,MACPuG,OAAQ,OACR7G,OAAQ,SACRP,QAAS,OACTkH,oBAAqB,iBACrBiI,QAAS,GACTrP,UAAW,QAIJsP,GAtCG,WAEd,IAAMzF,EAAY4B,qBAAWH,IAOvBvG,EAAO8E,EAAUqD,KAAI,SAACnI,GACxB,OAAO,uBAAGjC,GAAE,gBAAWiC,EAAKkG,KAAOrG,QAAS,kBALzB,SAACG,GACpBrF,aAAauC,QAAQ,WAAYM,KAAKC,UAAUuC,IAIEwK,CAAexK,IAAOoI,IAAKpI,EAAKkG,KAC1E,kBAACuE,GAAD,CAAezK,KAAMA,QAI3B/B,EAAUpD,KAChB,OACI,yBAAKuD,GAAG,uBACJ,8CACA,yBAAKA,GAAG,kBAAkBI,UAAWP,EAAQoM,gBACxCrK,KCfb8I,GAAQ,EA4FNjO,GAAYC,YAAW,CACzBqM,MAAO,CACLtD,SAAU,IACVtF,SAAU,IACV7C,OAAQ,UAEVgP,IAAK,CACHhP,OAAQ,OACR2J,SAAU,WACVvC,KAAM,MACN6H,cAAe,IAEjBC,OAAQ,CACJ5H,WAAY,IACZ5G,SAAU,IAEdyO,OAAO,CACHC,WAAY,MACZ1O,SAAU,MAIH2O,GAjHF,WAAO,IAAD,EAEStO,mBAAS,IAFlB,mBAERmE,EAFQ,KAEFoK,EAFE,KAMf,SAASC,EAAUC,GACnB,MAAM,GAAN,OAAUA,EAAIC,QAAQ,IAgBtB,IAAMlF,EAAO,GAEbrF,EAAKuH,KAAI,SAACnI,GACN,OACIiG,EAAKvB,MAbMf,EAaS3D,EAAKf,KAbRmM,EAac,EAbTC,EAaYrL,EAAKgE,MAXxC,CAAEL,OAAMyH,MAAKC,OAAMrH,MAN1B,SAAkBoH,EAAKC,GACvB,OAAOD,EAAMC,EAICC,CAASF,EAAKC,MAD5B,IAAmB1H,EAAMyH,EAAKC,KAiB9B,IAAME,EAA2BtF,EAXpBkC,KAAI,qBAAGnE,SAAmBwH,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAY7DC,EA7BW,IA6BeJ,EAC1BK,EAAeD,EAAeJ,EAEpCrN,qBAAU,WACN8M,EAAQxN,KAAK2G,MAAMxJ,aAAaC,QAAQ,YACzC,IAEH,IAAMqD,EAAUpD,KAEhB,OACI,yBAAKuD,GAAG,kBACJ,wBAAII,UAAWP,EAAQ4M,QAAvB,aACA,kBAACrD,GAAA,EAAD,CAAgBlJ,UAAWmJ,MACvB,kBAACC,EAAA,EAAD,CAAOlJ,UAAWP,EAAQkJ,MAAOQ,aAAW,kBACxC,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWtJ,UAAWP,EAAQ2M,QAA9B,QACA,kBAAC9C,EAAA,EAAD,CAAWtJ,UAAWP,EAAQ2M,OAAQ7C,MAAM,QAA5C,aACA,kBAACD,EAAA,EAAD,CAAWtJ,UAAWP,EAAQ2M,OAAQ7C,MAAM,QAA5C,eACA,kBAACD,EAAA,EAAD,CAAWtJ,UAAWP,EAAQ2M,OAAQ7C,MAAM,SAA5C,eAGR,kBAACG,EAAA,EAAD,KACCjC,EAAKkC,KAAI,SAAC0D,GAAD,OACN,kBAAChE,GAAA,EAAD,CAAUO,IAAKU,MACf,kBAAChB,EAAA,EAAD,KAAY+D,EAAIlI,MAChB,kBAACmE,EAAA,EAAD,CAAWC,MAAM,QAAQ8D,EAAIT,KAC7B,kBAACtD,EAAA,EAAD,CAAWC,MAAM,QAAS8D,EAAIR,MAC9B,kBAACvD,EAAA,EAAD,CAAWC,MAAM,SAAUkD,EAAUY,EAAI7H,YAI7C,kBAAC6D,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWgE,QAAS,IACpB,kBAAChE,EAAA,EAAD,CAAWiE,QAAS,GAApB,YACA,kBAACjE,EAAA,EAAD,CAAWC,MAAM,SAASkD,EAAUM,KAExC,kBAAC1D,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,WApEH,IAoE4C,KAAKoD,QAAQ,GAAtD,OACA,kBAACrD,EAAA,EAAD,CAAWC,MAAM,SAASkD,EAAUU,KAExC,kBAAC9D,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWiE,QAAS,GAApB,SACA,kBAACjE,EAAA,EAAD,CAAWC,MAAM,SAASkD,EAAUW,QAK5C,kBAAChM,EAAA,EAAD,CACIpB,UAAWP,EAAQyM,IACnB/L,QAAQ,YACRxC,MAAM,WAHV,wB,6FCPD6P,GA7EA,WAAO,IAAD,EACiBvP,mBAAS,IAD1B,mBACVwP,EADU,KACCC,EADD,OAEe1C,IAAM/M,SAAS,MAF9B,mBAEV0P,EAFU,KAEAC,EAFA,KAUXC,EAAc,WAClBD,EAAY,OAGRE,EAAY,yCAAG,6BAAA7D,EAAA,sEhBjBrB9N,aAAawC,WAAW,QACxBxC,aAAawC,WAAW,aACxBxC,aAAauC,QAAQ,OAAQM,KAAKC,UAAU,KgBevB,OAEX8O,EAAW,kBAAC,IAAD,CAAUxO,GAAG,MAC9BmO,EAAaK,GAHI,2CAAH,qDAQZC,EAAc9R,IASpB,OACI,yBAAK0D,GAAG,oBACFoO,EACE,8BACI,kBAAC,KAAD,CACAC,gBAAc,cACdC,gBAAc,OACd7M,QAhCI,SAAC+J,GACnBwC,EAAYxC,EAAM+C,gBAgCJvQ,SAAU,UACV,kBAAC,IAAD,CAAM2B,GAAG,SACL,kBAAC,KAAD,OAER,kBAAC,KAAD,CACIK,GAAG,cACH+N,SAAUA,EACVS,aAAW,EACXhI,KAAMvK,QAAQ8R,GACdtG,QAASwG,GAGT,kBAAC7H,EAAA,EAAD,CACI3E,QAASwM,GADb,WAIA,kBAAC7H,EAAA,EAAD,CACI3E,QAASwM,GADb,iBAIA,kBAAC7H,EAAA,EAAD,CACI3E,QAAS,WACTwM,IACAC,MAHJ,YASH,sDAGRL,IC7CHpR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsO,KAAM,CACJC,SAAU,GAEZuD,WAAY,CACVC,YAAa/R,EAAMG,QAAQ,IAE7B6R,MAAO,CACLzD,SAAU,OAID0D,GApCH,WAGR,IAAM/O,EAAUpD,KAChB,OACE,yBAAKuD,GAAG,iBACF,kBAACsL,GAAA,EAAD,CAAQrE,SAAS,SAASlJ,MAAM,WAChC,kBAAC8Q,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQ3O,UAAWP,EAAQ4O,WAAY1Q,MAAM,UAAUwL,aAAW,QAC/E,kBAAC,KAAD,OAEJ,kBAACjJ,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWP,EAAQ8O,QAExC,8BAEA,kBAAC,GAAD,WC1BPK,GAAc5G,wBAAc,MC+F1B6G,GA9EH,WAAO,IAAD,EAEsB5Q,mBAAS/B,IAAe,YAAc,iBAF5D,mBAET8R,EAFS,KAEIc,EAFJ,OAGD7Q,mBAASe,KAAK2G,MAAMxJ,aAAaC,QAAQ,UAAjD+N,EAHS,sBAIkBlM,mBAAS,IAJ3B,mBAITqI,EAJS,KAIEyI,EAJF,KAkBd,IAAMC,EAAa,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCnP,UAAyBoP,EAAU,6BAClDC,EAAQjT,KAAgBiO,EAAKhI,QAEjC,OACM,kBAAC,IAAD,iBAAW+M,EAAX,CAAiBE,OAAQ,SAAApR,GAAK,OAC5BmR,EACK,kBAACF,EAAcjR,GACjB,kBAAC,IAAD,CAAUuB,GAAG,WAKpB8P,EAAe,SAAC,GAAqC,IAAzBJ,EAAwB,EAAnCnP,UAAyBoP,EAAU,6BACxD,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBE,OAAQ,SAAApR,GAAK,OAC1B9B,IACC,kBAAC+S,EAAcjR,GACb,kBAAC,IAAD,CAAUuB,GAAG,WAKpB+P,EAAgB,SAAC,GAAoC,IAAxBL,EAAuB,EAAlCnP,UAAyBoP,EAAS,6BACxD,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBE,OAAQ,SAAApR,GAAK,OAC3B9B,IAEA,kBAAC,IAAD,CAAUqD,GAAG,cADf,kBAAC0P,EAAcjR,QAWpB,OALA0B,qBAAU,WA3CVd,MAAM,mDACDM,MAAK,SAAAC,GAAQ,OAAIA,EAASK,UAC1BN,MAAK,SAAAqQ,GAAI,OAAIR,EAAaQ,MAGK,OAAjCpT,aAAaC,QAAQ,SACpBD,aAAauC,QAAQ,OAAQM,KAAKC,UAAU,OAwC/C,IAGC,kBAAC8I,GAAYyH,SAAb,CAAsB5O,MAAO0F,GAC7B,kBAACsI,GAAYY,SAAb,CAAsB5O,MAAO,CAACoN,cAAac,mBAC3C,yBAAK9O,UAAU,OAEb,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KAEE,kBAACsP,EAAD,CAAeG,OAAK,EAACC,KAAK,IAAK5P,UAAW8E,IAC1C,kBAACyK,EAAD,CAAcI,OAAK,EAACC,KAAK,QAAS5P,UAAW2F,IAC7C,kBAAC4J,EAAD,CAAcI,OAAK,EAACC,KAAK,QAAQ5P,UAAWyM,KAC5C,kBAAC8C,EAAD,CAAcI,OAAK,EAACC,KAAK,aAAa5P,UAAWiM,KACjD,kBAACiD,EAAD,CAAYS,OAAK,EAACC,KAAK,SAAS5P,UAAWiL,WChFvD4E,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACI,kBAAC,GAAD,OAGJC,SAASC,eAAe,SrBuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/Q,MAAK,SAAAgR,GACJA,EAAaC,gBAEdC,OAAM,SAAA/M,GACLG,QAAQH,MAAMA,EAAMgN,c","file":"static/js/main.5eb7be89.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Returns Token\nexport const isLoggedIn = () => {\n    const token = localStorage.getItem('auth');\n    return token;\n};\n\n//Removes the auth token\nexport const logout = () => {\n    localStorage.removeItem('auth');\n    localStorage.removeItem('user');\n    localStorage.setItem(\"cart\", JSON.stringify([]))};\n\n// Stores the Auth Token and admin status in LocalStorage\nexport const setToken = (token) => {\n    localStorage.setItem('auth', token);\n};\n\n\n","import React, {useState, useEffect} from 'react';\nimport {setToken} from '../config/auth';\n// import {LoginStatus} from '../context/login-status-context';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Redirect} from 'react-router-dom'\n\n\nconst LoginForm = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [remember, setRemember] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    // const {loginStatus, setLoginStatus} = useContext(LoginStatus);\n\n    const toggle = () => {\n        setRemember(!remember);\n    };\n\n    const handleLogin = () => {\n        //checks if email and password is valid\n        setMsg('');\n        if(remember){\n            localStorage.setItem('email', email);\n        } else {\n            localStorage.removeItem('email');\n        };\n\n        fetch('https://jm-shop-api.herokuapp.com/api/accounts/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password })\n        }).then(response => {\n            if(response.status === 200) {\n                setToken(response.headers.get('authentication'),);\n                setMsg(<Redirect to='/inventory' />);\n            } else {\n                setMsg('Login Failed');\n            } \n            return response.json()\n        }).then(response => localStorage.setItem(\"user\", JSON.stringify(response))\n        );\n    };\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const localEmail = localStorage.getItem('email');\n        if(localEmail){\n            setEmail(localEmail);\n            setRemember(true);\n        }\n    }, []);\n    \n    return(\n\n        <div id=\"login_container\">\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.formContainer}>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n                </Typography>\n                <span className={classes.msg}>{msg}</span>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={({ target }) => setEmail(target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox\n                                    name=\"remember\" \n                                    checked={remember} \n                                    color=\"primary\"\n                                    onChange={toggle} />}\n                        label=\"Remember me\"\n                    />\n                    \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => handleLogin()}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container className={classes.linkContainer}>\n                        <Grid item xs>\n                        <Link to=\"\" variant=\"body2\">\n                            Forgot password?\n                        </Link>\n                        </Grid>\n                        <Grid item>\n                        <Link \n                            to=\"\"\n                            onClick={props.handleFormView} \n                            variant=\"body2\">\n                            {\"Don't have an account? Sign Up\"}\n                        </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    </div>\n    \n    )\n};\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    formContainer: {\n        border: \"solid black 1px\",\n        borderRadius: 5,\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    msg: {\n        color: \"red\",\n        fontSize: \"20px\"\n    },\n    linkContainer: {\n        marginBottom: 50\n    }\n  }));\n\nexport default LoginForm;","import React, {useState} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst RegisterForm = (props) => {\n\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordMatch, setPasswordMatch] = useState('');\n    const [isAdmin] =useState(false);\n    const [cart] =useState([]);\n\n    const [fNameError, setFNameError] = useState(false);\n    const [lNameError, setLNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n\n    const emailRegex = RegExp(\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n      );\n\t\n    //   Password must contain at least one letter, at least one number, and be longer than six charaters.\n    const passwordRegex = RegExp(\n        /^(?=.*[0-9]+.*)(?=.*[a-zA-Z]+.*)[0-9a-zA-Z]{6,}$/\n    );\n\n    const handleFormValidation = (e) => {\n        const {name, value} = e;\n        switch(name){\n            case \"firstName\":\n                fname === '' ? setFNameError(true) : setFNameError(false);\n                break;\n            case \"lastName\":\n                lname === '' ? setLNameError(true) : setLNameError(false);\n                break;\n            case \"email\":\n                email.match(emailRegex) ? setEmailError(false) : setEmailError(true);\n                break;\n            case \"password\":\n                value.match(passwordRegex) ? setPasswordError(false) : setPasswordError(true);\n                break;    \n            case \"passwordMatch\":\n                value.match(password) ? setPasswordMatchError(false) : setPasswordMatchError(true);\n                break;\n            default:\n        };\n    };\n\n\n    const addAccount = () => {\n\n        if(fNameError === false && fname !== '' \n            && lNameError === false && lname !== ''\n            && emailError === false && email !== ''\n            && passwordError === false && password !== ''\n            && passwordMatchError === false){\n                console.log(\"valid form\")\n            } else {\n                alert(\"Invalid form, check your information.\")\n            };\n\n\n        fetch('https://jm-shop-api.herokuapp.com/api/accounts/register', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({fname, lname, email, password, isAdmin, cart})\n        })\n        .then(() => {setFname(''); setLname(''); setEmail(''); setPassword(''); setPasswordMatch('')}\n        ).then(props.handleFormView)\n\n    };\n\n\n    const classes = useStyles();\n    \n    return(\n        <div id=\"register_container\">\n <Container component=\"main\" maxWidth=\"xs\" className={classes.registerForm}>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                Sign up\n                </Typography>\n                <form id=\"sign_up_form\" className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                    <TextField\n                        // autoComplete=\"fname\"\n                        name=\"firstName\"\n                        error={fNameError}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"firstName\"\n                        label=\"First Name\"\n                        autoFocus\n                        value={fname}\n                        onChange={({target}) => setFname(target.value)}\n                        onBlur={({target}) => handleFormValidation(target)}\n                    />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    <TextField\n                        variant=\"outlined\"\n                        error={lNameError}\n                        required\n                        fullWidth\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        name=\"lastName\"\n                        // autoComplete=\"lname\"\n                        value={lname}\n                        onChange={({target}) => setLname(target.value)}\n                        onBlur={({target}) => handleFormValidation(target)}\n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        error={emailError}\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={email}\n                        onChange={({target}) => setEmail(target.value)}\n                        onBlur={({target}) => handleFormValidation(target)}\n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        variant=\"outlined\"\n                        error={passwordError}\n                        type=\"password\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"Create Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={({target}) => {setPassword(target.value); handleFormValidation(target)}}\n                        helperText=\"Password must be at least 6 characters long and include at least one number.\"\n\n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        type=\"password\"\n                        error={passwordMatchError}\n                        variant=\"outlined\"\n                        required={true}\n                        fullWidth\n                        id=\"passwordMatch\"\n                        label=\"Confirm Password\"\n                        name=\"passwordMatch\"\n                        onChange={({target}) => {setPasswordMatch(target.value); handleFormValidation(target)}}\n                        helperText=\"Passwords must match.\"\n                        value={passwordMatch}\n                    />\n                    </Grid>\n\n                </Grid>\n                <Button\n                    // type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={() => addAccount()}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\" className={classes.linkContainer}>\n                    <Grid item>\n                    <Link to='' \n                    onClick={props.handleFormView} \n                    variant=\"body2\">\n                        Already have an account? Sign in\n                    </Link>\n                    </Grid>\n                </Grid>\n                </form>\n            </div>\n        </Container>            \n        </div>\n    )\n};\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      registerForm: {\n          border: \"solid black 1px\",\n          borderRadius: 5,\n          marginTop: 50\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n      linkContainer: {\n          marginBottom: 50\n      }\n  }));\n\nexport default RegisterForm;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AdContainer = () => {\n\n    const classes = useStyles();\n    return(\n        <div id=\"ad_container\" className={classes.container}>\n            <p>All the brands you love, at prices you can afford!</p>\n\n            <div className={classes.logos}>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/f41203d00a203780.png\" className={classes.image} alt=\"logo\"/>\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/40f2eeff324dbf8f.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/33d52ffb1724c1a8.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/f19cf7832ff1eac4.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/7e5f2994c8c46d10.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/0e1617d09434ceee.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/65d54fe044bd4863.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/e8c894a432523c05.png\" className={classes.image} alt=\"logo\" />\n                </div>\n                <div className={classes.logo}>\n                    <img src=\"https://cdn.expertvoice.com/static-forever/public-web/bdcc4ff759625385.png\" className={classes.image} alt=\"logo\" />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst useStyles = makeStyles(() => ({\n    logos: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n        width: \"100%\"\n    },\n    logo: {\n        width: \"1fr\",\n        height: \"100px\"\n    },\n    image: {\n        width: \"90%\"\n    }\n  }));\n\nexport default AdContainer;","import React, {useState} from 'react';\nimport LoginForm from '../components/LoginForm';\nimport RegisterForm from '../components/RegisterForm'\nimport AdContainer from '../components/AdContainer';\n\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Home = () => {\n    const [formView, setFormView] = useState('login');\n\n    const handleFormView = () => {\n        formView === 'login' ? setFormView('register') : setFormView('login');\n    };\n\n    const form = \n        formView === 'login' ? \n            <LoginForm \n            handleFormView={handleFormView}\n            /> \n            : <RegisterForm \n            handleFormView={handleFormView}\n            />\n    ;\n\n    const classes = useStyles();\n    return(\n        <div id=\"main_container\">\n \n            <div className={classes.welcomeContainer}>\n                <div className={`${classes.left} ${classes.con}`}>\n                    <h1>Welcome</h1>\n                    <p>Welcome to the exclusive, members only gear shop. To view the best deals on the\n                        market right now, please login. If you have not made an account yet, you can do \n                        so <Link \n                        onClick={handleFormView}\n                        >here!</Link></p>\n                    <AdContainer/>\n                </div>\n\n                <div className={`${classes.right} ${classes.con}`}>\n                    {form}\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\nconst useStyles = makeStyles(() => ({\n    welcomeContainer: {\n        display: \"flex\",\n    },\n    con: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"50%\",\n        alignItems: \"center\"\n    },\n    left: {\n        height: \"80vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        // justifyContent: \"center\",\n        padding: \"30px 50px\",\n        color: \"#4E4E4E\",\n        fontSize: \"22px\",\n        fontWeight: \"300\",\n        lineHeight: \"1.5\"\n    },\n    right: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n    }\n\n\n  }));\n\nexport default Home;","import React, {useState} from 'react';\n\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Item = () => {\n\n    let existingCart = localStorage.getItem(\"cart\");\n    const [item] = useState(JSON.parse(localStorage.getItem('selected')));\n    const [cart] = useState(JSON.parse(existingCart));\n\n    const handleAddToCart = () => {\n        cart.push(item);\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\n    };\n\n\n    const classes = useStyles();\n    return(\n        <div className={classes.itemContainer}>\n            <div className={classes.itemContent}>\n                <div className=\"image-carousel\">\n                    <img \n                        src={item.img} \n                        className={classes.img} \n                        alt=\"default img placeholder\" \n                    />\n                </div>\n                <p className={classes.desc}>{item.desc}</p>\n            </div>\n            <div className={classes.itemContent}>\n                <p className={classes.name}>{item.name}</p>\n                <p className={classes.price}>Price: ${item.price}</p>\n                <FormControl variant=\"outlined\" >\n                <InputLabel id=\"demo\">Size</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    className={classes.selectSize}\n                    label=\"Size\"\n                >\n                    <MenuItem value={\"s\"}>Small</MenuItem>\n                    <MenuItem value={\"m\"}>Medium</MenuItem>\n                    <MenuItem value={\"l\"}>Large</MenuItem>\n                </Select>\n                </FormControl>\n                <p className={classes.quantity}>Quantity: {item.quantity}</p>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    endIcon={<AddShoppingCartIcon />}\n                    onClick={() => handleAddToCart()}\n                >Add to Cart\n                </Button>\n            </div>\n        </div>\n    )\n}\nconst useStyles = makeStyles(() => ({\n    itemContainer: {\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n        height: \"auto\",\n    },\n    itemContent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"1fr\",\n        alignItems: \"center\",\n    },\n    img: {\n        width: 400,\n        padding: 20\n    },\n    desc: {\n        lineHeight: 1.5,\n        fontSize: 20,\n        fontWeight: 300,\n        padding: 5,\n        width: 600,\n    },\n    selectSize: {\n        minWidth: 120\n    },\n    name: {\n        fontFamily: \"Stuart,Georgia,serif\",\n        fontWeight: 700,\n        fontSize: 35,\n        padding: 5,\n        marginTop: 40,\n    },\n    quantity: {\n        fontSize: 18\n    },\n    price: {\n        fontSize: 18\n    }\n  }));\n\nexport default Item;","import React, {useState} from 'react';\n\nimport Modal from '@material-ui/core/Modal';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n// import PropTypes from 'prop-types';\n\n\nconst EditModal = (props) => {\n    const [open, setOpen] = useState(false);    \n\n    const [name, setName] = useState(props.inventory.name);\n    const [price, setPrice] = useState(props.inventory.price);\n    const [quantity, setQuantity] = useState(props.inventory.quantity);\n    const [desc, setDesc] = useState(props.inventory.desc);\n    const [img, setImg] = useState(props.inventory.img);\n\n\n    const editInventory = () => {\n        fetch(`https://jm-shop-api.herokuapp.com/api/inventory/${props.inventory._id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({name, price,quantity, desc, img})\n        })\n        .then(console.log(\"EDITED\"))\n        .then(() => toggleModal())\n    };\n\n    const toggleModal = () => {\n        if(open){\n            setOpen(false);\n        } else {\n            setOpen(true)\n        };\n    };\n      \n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          position: 'absolute',\n          width: 400,\n          backgroundColor: theme.palette.background.paper,\n          border: '2px solid #000',\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          top: 100,\n          left: '37%',\n        },\n        button: {\n            margin: theme.spacing(2, 0, 2),\n          },\n        input: {\n            margin: theme.spacing(1,0,1)\n        }\n      }));\n\n    const classes = useStyles();\n\n    // EditModal.propTypes = {\n    //     name: PropTypes.string.isRequired,\n    //     quantity: PropTypes.number.isRequired,\n    //     price: PropTypes.string.isRequired,\n    //     desc: PropTypes.string.isRequired\n    // }\n\n\n    return (\n        <div id=\"edit_modal_container\">\n            <EditIcon onClick={toggleModal} />\n            <Modal\n                open={open}\n                onClose={toggleModal}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n\n                <div className={classes.paper}>\n                    <h2 id=\"simple-modal-title\">Edit Item</h2>\n                    <TextField\n                        name=\"name\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Item Name\"\n                        className={classes.input}\n                        value={name}\n                        onChange={({target}) => setName(target.value)}\n                    />\n                    <TextField\n                        name=\"quantity\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"quantity\"\n                        label=\"Quantity\"\n                        className={classes.input}\n                        value={quantity}\n                        onChange={({target}) => setQuantity(target.value)}\n                    />\n                    <TextField\n                        name=\"price\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"Price\"\n                        className={classes.input}\n                        value={price}\n                        onChange={({target}) => setPrice(target.value)}\n                    />\n                    <TextField\n                        name=\"img\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"img_url\"\n                        label=\"Img URL\"\n                        value={img}\n                        className={classes.input}\n                        onChange={({target}) => setImg(target.value)}\n                    />\n                    <TextField\n                        name=\"desc\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"desc\"\n                        label=\"Description\"\n                        className={classes.input}\n                        multiline = {true}\n                        rows=\"5\"\n                        value={desc}\n                        onChange={({target}) => setDesc(target.value)}\n                    />\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={() => editInventory()}\n                    >\n                        Update\n                    </Button>                                                        \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        onClick={() => toggleModal()}\n                    >\n                        Cancel\n                    </Button>                                                        \n                </div>\n\n\n            </Modal>\n        </div>\n    )\n};\n\nexport default EditModal;","import React, {useState} from 'react';\n\nimport Modal from '@material-ui/core/Modal';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst AddModal = (props) => {\n    const [open, setOpen] = useState(false);    \n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [desc, setDesc] = useState('');\n    const [img, setImg] = useState('');\n \n\n    const addInventory = () => {\n        fetch(`https://jm-shop-api.herokuapp.com/api/inventory`, {\n            method: \"POST\",\n            headers: {\n                \"Content-type\" : \"application/json\"\n            },\n            body: JSON.stringify({name, price, quantity, desc, img})\n        }).then(() => {setName(''); setPrice(''); setQuantity(''); setDesc(''); setImg('')})\n        .then(() => toggleModal())\n        .then(console.log(\"ADDED\"))\n    }\n\n\n\n    const toggleModal = () => {\n        if(open){\n            setOpen(false);\n        } else {\n            setOpen(true)\n        };\n    };\n      \n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          position: 'absolute',\n          width: 400,\n          backgroundColor: theme.palette.background.paper,\n          border: '2px solid #000',\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          top: 100,\n          left: '37%',\n        },\n        button: {\n            margin: theme.spacing(3, 0, 2),\n          },\n        input: {\n            margin: theme.spacing(1,0,1)\n        }\n      }));\n\n    const classes = useStyles();\n\n\n\n\n    return (\n        <div id=\"edit_modal_container\">\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<AddIcon />}\n                onClick={toggleModal}\n            >\n                Add Item\n            </Button>\n            <Modal\n                open={open}\n                onClose={toggleModal}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n\n                <div className={classes.paper}>\n                    <h2 id=\"simple-modal-title\">Add Item</h2>\n                    <TextField\n                        name=\"name\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Item Name\"\n                        className={classes.input}\n                        onChange={({target}) => setName(target.value)}\n                    />\n                    <TextField\n                        name=\"quantity\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"quantity\"\n                        label=\"Quantity\"\n                        className={classes.input}\n                        onChange={({target}) => setQuantity(target.value)}\n                    />\n                    <TextField\n                        name=\"price\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"Price\"\n                        className={classes.input}\n                        onChange={({target}) => setPrice(target.value)}\n                    />\n                    <TextField\n                        name=\"img\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"img_url\"\n                        label=\"Img URL\"\n                        className={classes.input}\n                        onChange={({target}) => setImg(target.value)}\n                    />\n                    <TextField\n                        name=\"desc\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"desc\"\n                        label=\"Description\"\n                        className={classes.input}\n                        onChange={({target}) => setDesc(target.value)}\n                    />\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={() => addInventory()}\n                    >\n                        Add\n                    </Button>                                                        \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        onClick={() => toggleModal()}\n                    >\n                        Cancel\n                    </Button>                                                        \n                </div>\n\n\n            </Modal>\n        </div>\n    )\n};\n\nexport default AddModal;","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst DeleteBtn = (props) => {\n\n    const handleDelete = () => {\n        if(window.confirm('Are you sure you want to remove this item?')){\n            fetch(`https://jm-shop-api.herokuapp.com/api/inventory/${props.inventory._id}`, {\n                method: \"DELETE\",\n            })\n            .then(console.log(\"DELETE\"))\n        };\n        \n    };\n\n    return (\n        <div id=\"delete_btn_container\">\n            <DeleteIcon onClick={ () => handleDelete() }/>\n        </div>\n    )\n};\n\nexport default DeleteBtn;","import {createContext} from 'react';\n\nexport const ItemContext = createContext([]);","import React, {useContext, useState} from 'react';\nimport EditModal from '../components/EditModal';\nimport AddModal from '../components/AddModal';\nimport DeleteBtn from '../components/DeleteBtn';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {ItemContext} from '../context/item-context';\nimport orderBy from 'lodash/orderBy';\n\nconst InventoryManagement = (props) => {\n\n    const inventory = useContext(ItemContext);\n\n    const toggleDirection = () => {\n        if(direction === \"asc\"){\n            setDirection(\"desc\")\n        } else {\n            setDirection(\"asc\")\n        };\n    };\n\n    const [sortList, setSortList] = useState(inventory);\n    const [direction, setDirection] = useState('asc');\n\n \n\n    const sortNames =() => {\n        const sorted = orderBy(inventory, [item => item.name.toLowerCase()], direction);\n        toggleDirection();\n        setSortList(sorted)\n    };\n\n    const sortQuantity =() => {\n        const sorted = orderBy(inventory, \"quantity\", direction);\n        toggleDirection();\n        setSortList(sorted)\n    };\n\n\n    const useStyles = makeStyles({\n        table: {\n          minWidth: 650,\n        },\n        descCell: {\n            maxWidth: 300\n        },\n        itemCell: {\n            minWidth: 300\n        },\n        quantityCell: {\n            width: 20\n        },\n        tableHeader: {\n            fontWeight: 'bold'\n        }\n      });\n    \n    const classes = useStyles();\n\n    return (\n        <div id=\"inventory_container\">\n            <TableContainer component={Paper}>\n                <AddModal />\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                    <TableRow>\n                        <TableCell \n                            padding=\"checkbox\" \n                            align=\"left\" \n                            className={classes.tableHeader}\n                            onClick={() => sortNames()}\n                            >\n                                <Checkbox/>\n                                Item\n                        </TableCell>\n                        <TableCell \n                            align=\"right\" \n                            className={classes.tableHeader}\n                            onClick={() => sortQuantity()}\n                            >\n                                Quantity</TableCell>\n                        <TableCell \n                            align=\"right\" \n                            className={classes.tableHeader}\n                            onClick={() => sortQuantity()}\n                            >\n                                Price</TableCell>\n                        <TableCell \n                            align=\"left\" \n                            className={classes.tableHeader}\n                            >\n                                Description</TableCell>\n                        <TableCell \n                            align=\"left\" \n                            className={classes.tableHeader}>\n                                Edit</TableCell>\n                        <TableCell \n                            align=\"left\" \n                            className={classes.tableHeader}>\n                                Delete</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        \n                    {sortList.map((item) => (\n                        <TableRow key={item._id}>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"checkbox\" className={classes.itemCell}>\n                            <Checkbox/>\n                            {item.name}\n                        </TableCell>\n                        <TableCell align=\"right\" className={classes.quantityCell}>{item.quantity}</TableCell>\n                        <TableCell align=\"right\">{item.price}</TableCell>\n                        <TableCell align=\"left\" className={classes.descCell}>{item.desc}</TableCell>\n                        <TableCell align=\"left\">\n                            <EditModal \n                                inventory={item} \n                                />\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            <DeleteBtn \n                                inventory={item} \n                                />\n                        </TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default InventoryManagement;","import React, {useState, useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst UserManagement = () => {\n\nconst [users, setUsers] = useState([]);\n\nasync function getUsers(){\n    const response = await fetch(`https://jm-shop-api.herokuapp.com/api/accounts`);\n    response.json()\n        .then(response => setUsers(response))\n        // .catch(err => setError());\n  };\n\n  useEffect(() => {\n    getUsers();\n}, []);\n\n\n    const useStyles = makeStyles({\n        table: {\n          minWidth: 650,\n        },\n        descCell: {\n            maxWidth: 300\n        },\n        itemCell: {\n            minWidth: 50\n        },\n        quantityCell: {\n            width: 20\n        },\n        tableHeader: {\n            fontWeight: 'bold'\n        }\n      });\n    \n    const classes = useStyles();\n\n    return (\n        <div id=\"inventory_container\">\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                    <TableRow>\n                        <TableCell padding=\"checkbox\" align=\"left\" className={classes.tableHeader}>\n                            <Checkbox/>\n\n                        </TableCell>\n                        <TableCell align=\"left\" className={classes.tableHeader}>First Name</TableCell>\n                        <TableCell align=\"left\" className={classes.tableHeader}>Last Name</TableCell>\n                        <TableCell align=\"left\" className={classes.tableHeader}>Email</TableCell>\n                        <TableCell align=\"left\" className={classes.tableHeader}>isAdmin</TableCell>\n                        <TableCell align=\"left\" className={classes.tableHeader}>Edit</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {users.map((user) => (\n                        <TableRow key={user._id}>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"checkbox\" className={classes.itemCell}>\n                            <Checkbox/>\n                        </TableCell>\n                        <TableCell align=\"left\" className={classes.itemCell}>{user.fname}</TableCell>\n                        <TableCell align=\"left\">{user.lname}</TableCell>\n                        <TableCell align=\"left\">{user.email}</TableCell>\n                        <TableCell align=\"left\" className={classes.descCell}>\n                            {user.isAdmin ? \n                                \"yes\"\n                                :\"no\"}\n                            </TableCell>\n                        <TableCell align=\"left\">\n                        </TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </div>\n    )\n}\n\nexport default UserManagement;","import React from 'react';\nimport InventoryManagement from '../components/InventoryManagement';\nimport UserManagement from '../components/UserManagement';\n\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={'span'} >{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Admin() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Inventory\" {...a11yProps(0)} />\n          <Tab label=\"Users\" {...a11yProps(1)} />\n\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <InventoryManagement />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <UserManagement />\n      </TabPanel>\n      \n\n    </div>\n  );\n}\n\n","import React from 'react';\n\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst ItemThumbNail = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Link href=\"/item\" item={props.item}>\n            <div className={classes.container}>\n                <div className={classes.imgContainer}>\n                    <img className={classes.img} src={props.item.img} alt={props.item.name} />\n                </div>\n                <h4 className={classes.itemName}>{props.item.name}</h4>\n                <p className={classes.itemPrice}>Price: ${props.item.price}</p>\n            </div>\n        </Link>\n    )\n}\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"1fr\",\n        height: \"auto\",\n        border: \"solid black 1px\",\n        borderRadius: 3,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        transition: \"all .1s ease-in-out\",\n        color: \"rgb(45, 42, 42)\",\n    },\n    itemName: {\n        padding: 0,\n        margin: 5,\n        fontSize: 20,\n        maxWidth: 225,\n    },\n    itemPrice: {\n\n    },\n    img: {\n        width: 150,\n        margin: 10\n    }\n  }));\n\nexport default ItemThumbNail;","import React, {useContext} from 'react';\nimport ItemThumbnail from '../components/ItemThumbnail';\nimport {ItemContext} from '../context/item-context';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Inventory = () => {\n\n    const inventory = useContext(ItemContext);\n    // const [selected, setSelected] = useState({});\n\n    const handleSelected = (item) => {\n        localStorage.setItem('selected', JSON.stringify(item))\n    }\n    // let { id } = useParams();\n    const item = inventory.map((item) => {\n        return <a to={`/item/${item._id}` }onClick={() => handleSelected(item)} key={item._id}>\n                <ItemThumbnail item={item}/>\n            </a>\n    });\n\n    const classes = useStyles();\n    return(\n        <div id=\"inventory_container\" >\n            <h1>Inventory Page</h1>\n            <div id=\"items_container\" className={classes.itemsContainer}>\n                {item}\n            </div> \n        </div>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    itemsContainer: {\n        width: \"80%\",\n        height: \"auto\",\n        margin: \"0 auto\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n        gridGap: 15,\n        marginTop: 30,\n    },\n  }));\n\nexport default Inventory;","import React, {useEffect, useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\n\nlet index = 0;\nconst Cart = () => {\n\n    const [cart, setCart] = useState([])\n    const TAX_RATE = 0.07;\n\n    //maintains currency format\n    function ccyFormat(num) {\n    return `${num.toFixed(2)}`;\n    };\n\n    function priceRow(qty, unit) {\n    return qty * unit;\n    };\n\n    function createRow(desc, qty, unit) {\n    const price = priceRow(qty, unit);\n    return { desc, qty, unit, price };\n    };\n\n    function subtotal(items) {\n    return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n    };\n\n    const rows = [];\n\n    cart.map((item) => {\n        return (\n            rows.push(createRow(item.name, 1, item.price))\n        );\n    });\n\n    const invoiceSubtotal = subtotal(rows);\n    const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n    const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\n    useEffect(() => {\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div id=\"cart_container\">\n            <h2 className={classes.cartH2}>Your Cart</h2>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"spanning table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.header}>Item</TableCell>\n                            <TableCell className={classes.header} align=\"left\">Quantity:</TableCell>\n                            <TableCell className={classes.header} align=\"left\">Price each:</TableCell>\n                            <TableCell className={classes.header} align=\"right\">Sum Total</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={index++}>\n                        <TableCell>{row.desc}</TableCell>\n                        <TableCell align=\"left\">{row.qty}</TableCell>\n                        <TableCell align=\"left\" >{row.unit}</TableCell>\n                        <TableCell align=\"right\" >{ccyFormat(row.price)}</TableCell>\n                        </TableRow>\n                    ))}\n\n                    <TableRow>\n                        <TableCell rowSpan={3} />\n                        <TableCell colSpan={2}>Subtotal</TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>Tax</TableCell>\n                        <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell colSpan={2}>Total</TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n                    </TableRow>\n                    </TableBody>\n                </Table>\n                </TableContainer>\n                <Button \n                    className={classes.btn}\n                    variant=\"contained\"\n                    color=\"primary\">\n                    Proceed With Order\n                </Button>\n        </div>\n    )\n};\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n      maxWidth: 1000,\n      margin: \"0 auto\"\n    },\n    btn: {\n      margin: \"20px\",\n      position: \"relative\",\n      left: \"70%\",\n      paddingBottom: 10\n    },\n    header: {\n        fontWeight: 800,\n        fontSize: 18\n    },\n    cartH2:{\n        marginLeft: \"42%\",\n        fontSize: 30\n    }\n  });\n\nexport default Cart;","import React, {useState} from 'react';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {logout, isLoggedIn} from '../config/auth';\nimport {Redirect, Link } from 'react-router-dom';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\n\n\nconst Avatar = () => {\n    const [redirComp, setRedirComp] = useState('');\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    // const [user] = useState(JSON.parse(localStorage.getItem('user')));\n\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleLogout = async () => {\n        await logout();\n        const redirect = <Redirect to='/' />\n        setRedirComp(redirect);\n    }\n\n\n        \n    const loginStatus = isLoggedIn();\n    // const admin = user.isAdmin ? \n    //     <MenuItem \n    //         onClick={handleClose}\n    //         >Admin\n    //     </MenuItem>\n    //     : '';\n\n\n    return (\n        <div id=\"avatar_container\">\n            { loginStatus ? \n                <span>\n                    <AccountCircleIcon \n                    aria-controls=\"avatar-menu\" \n                    aria-haspopup=\"true\" \n                    onClick={handleClick} \n                    fontSize={'large'}/>\n                    <Link to=\"/cart\">\n                        <ShoppingCartOutlinedIcon />\n                    </Link>\n                <Menu\n                    id=\"avatar-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {/* {admin} */}\n                    <MenuItem \n                        onClick={handleClose}\n                        >Profile\n                    </MenuItem>\n                    <MenuItem \n                        onClick={handleClose}\n                        >Shopping Cart\n                    </MenuItem>\n                    <MenuItem \n                        onClick={() => {\n                        handleClose(); \n                        handleLogout()}}\n                        >Logout\n                    </MenuItem>\n                </Menu>\n                </span>\n               :\n                 <p> You are not logged in.</p>\n                  }  \n\n        {redirComp}\n        </div>\n     \n    )\n};\n\nexport default Avatar;","import React, {useState} from 'react';\n// import {isLoggedIn} from '../config/auth';\n// import {LoginStatus} from '../context/login-status-context'\n// import AvatarLink from '../components/AvatarLink';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '../components/Avatar';\nimport { isLoggedIn } from '../config/auth';\n\nconst Nav = () => {\n  // const [loginStatus, setLoginStatus] = useState(isLoggedIn() ? <Avatar/> : \"Not logged innnn\")\n\n    const classes = useStyles();\n    return(\n      <div id=\"nav_container\">\n            <AppBar position=\"static\" color=\"inherit\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}> \n                </Typography>\n                    <span>\n                    {/* {loginStatus} */}\n                    <Avatar/>\n                    </span>\n            </Toolbar>\n            </AppBar>\n            </div>\n\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default Nav;","import {createContext} from 'react'\n\nexport const LoginStatus = createContext(null)","import React, {useState, useEffect} from 'react';\nimport Home from './pages/Home';\nimport Item from './pages/Item';\nimport Admin from './pages/Admin';\nimport Inventory from './pages/Inventory';\nimport Cart from './pages/Cart';\nimport Nav from './pages/Nav';\nimport {isLoggedIn} from './config/auth';\nimport { LoginStatus } from './context/login-status-context';\nimport {ItemContext} from './context/item-context';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst App = () => {\n\n  const [loginStatus, setLoginStatus] = useState(isLoggedIn() ? \"Logged In\" : \"Not Logged In\")\n  const [user] = useState(JSON.parse(localStorage.getItem('user')));\n  const [inventory, setInventory] = useState([]);\n\n  function getInventory(){\n    fetch(`https://jm-shop-api.herokuapp.com/api/inventory`)\n        .then(response => response.json())\n        .then(data => setInventory(data))\n    };\n  function initializeCart(){\n    if(localStorage.getItem(\"cart\") === null){\n        localStorage.setItem(\"cart\", JSON.stringify([]))\n    };\n  };\n\n\n    const AdminRoute = ({component: Component, ...rest}) => {\n    const admin = isLoggedIn() && user.isAdmin;\n      \n      return (\n            <Route {...rest} render={props => \n              admin ?\n                  (<Component {...props} />)\n              : (<Redirect to=\"/\" />)\n            } />\n        );\n      };\n    \n    const PrivateRoute = ({component: Component, ...rest}) => {\n      return (\n          <Route {...rest} render={props => \n              isLoggedIn() ?\n              (<Component {...props} />)\n              : (<Redirect to=\"/\" />)\n          } />\n      );\n    };\n\n    const LoggedInRoute = ({component: Component, ...rest}) =>{\n      return (\n        <Route {...rest} render={props => \n          !isLoggedIn() ?\n        (<Component {...props} />)\n        : (<Redirect to=\"inventory\" />)\n      } />\n      );\n    };\n\n    useEffect(() => {\n      getInventory();\n      initializeCart();\n  }, []);\n\n    return (\n      <ItemContext.Provider value={inventory} >\n      <LoginStatus.Provider value={{loginStatus, setLoginStatus}}>\n      <div className=\"App\">\n        \n        <Router>\n          <Nav />\n          <Switch>\n          \n            <LoggedInRoute exact path=\"/\"  component={Home} />\n            <PrivateRoute exact path=\"/item\"  component={Item} />\n            <PrivateRoute exact path=\"/cart\" component={Cart} />\n            <PrivateRoute exact path=\"/inventory\" component={Inventory} />\n            <AdminRoute exact path=\"/admin\" component={Admin} />\n          </Switch>\n        </Router>\n      </div>\n    </LoginStatus.Provider>\n    </ItemContext.Provider>\n    );\n  }\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}